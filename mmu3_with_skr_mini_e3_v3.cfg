# Configuration for DIY MMU3 based on SKR-MINI
# Jeremy Briffaut kakou@kakou.org
# More info : https://www.thingiverse.com/thing:3910546
#
#
# config inspired from https://github.com/mwr666/klipper/blob/sunbeam2.0c_multi_mcu_mmu2/config/printer-protodev-corexy-multi-mcu-mmu2.cfg

[include mmu3_menus.cfg]

########################################
#
# Configuration for a SKR MINI e3 v3 board with 3 TMC2209 UART
# and 2 1.7A stepper motor at 1/16
# current for a 24V power
#
########################################
[mcu mmboard]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_3B0052001750425938323120-if00

[respond]
default_type: command

# E0 : MMU3 5mm road with the 5 gears
[manual_stepper pulley_stepper]
step_pin: mmboard:PB3
dir_pin: !mmboard:PB4
enable_pin: !mmboard:PD1
microsteps: 16
# 140 : mk8 gear
rotation_distance: 22.857
# 165 : fystec gear for mmu3
# rotation_distance: 19.394
velocity: 20
accel: 10
endstop_pin: ^mmboard:PC15

[tmc2209 manual_stepper pulley_stepper]
uart_pin: mmboard:PC11
tx_pin: mmboard:PC10
uart_address: 3
run_current: 0.650
sense_resistor: 0.110

# Y : MMU3 idler with the 5 ball bearings
[tmc2209 manual_stepper idler_stepper]
uart_pin: mmboard:PC11
tx_pin: mmboard:PC10
uart_address: 2
run_current: 0.580
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: ^mmboard:PC1
driver_SGTHRS: 128

[manual_stepper idler_stepper]
step_pin: mmboard:PB10
dir_pin: !mmboard:PB2
enable_pin: !mmboard:PB11
microsteps: 16
rotation_distance: 128
velocity: 100
accel: 80
endstop_pin: tmc2209_idler_stepper:virtual_endstop

# X : MMU3 selector
[tmc2209 manual_stepper selector_stepper]
uart_pin: mmboard:PC11
tx_pin: mmboard:PC10
uart_address: 0
run_current: 0.580
sense_resistor: 0.110
stealthchop_threshold: 999999
diag_pin: ^mmboard:PC0
driver_SGTHRS: 96

[manual_stepper selector_stepper]
step_pin: mmboard:PB13
dir_pin: !mmboard:PB12
enable_pin: !mmboard:PB14
# 80 step/mm
microsteps: 16
rotation_distance: 8
velocity: 35
accel: 100
endstop_pin: tmc2209_selector_stepper:virtual_endstop

# IR
# [filament_switch_sensor ir_sensor]
# pause_on_runout: False
# switch_pin: !P1.28 # P1.28 for X-max

################################
#
#  PARAMETER TO ADAPT TO YOUR SETUP
#
# variable_timeout_pause         : timeout of the MMU3 pause when user intervention is needed
# variable_disable_heater        : timeout of the heater during pause (temperature is saved and restored before resuming)
# variable_bowden_load_length1   : length of the bowden between the selector and the entry of the extruder (quick MOVE)
# variable_bowden_load_length2   : length of the bowden between the entry of the extruder and the extruder gear (slow MOVE)
# variable_bowden_load_speed1    : speed to use when loading from pinda to the extruder, this is the speed used during the majority of the load movement
# variable_bowden_load_speed2    : speed to use when loading from pinda to the extruder, this is the speed used during the second and smaller push to the gears
# variable_bowden_load_accel1    : accel to use when loading from pinda to the extruder, this is the acceleration used during the majority of the load movement
# variable_bowden_load_accel2    : accel to use when loading from pinda to the extruder, this is the acceleration used during the push to the gears
# variable_bowden_unload_length  : length between the the extruder gear and the PINDA
# variable_bowden_unload_speed   : speed value used while unloading the filament from extruder to pinda
# variable_bowden_unload_accel   : acceleration value used while unloading the filament from extruder to pinda
# variable_pinda_load_length     : length between the MMU3 and the PINDA during loading
# variable_pinda_unload_length   : length to retract the filament into the MMU3 from the PINDA during unloading
# variable_selector              : the 5 positions of the selector
# variable_idler                 : the 5 positions of the idler bearing ball
# variable_idler_home_position   : the homing position of the idler
# variable_idler_load_to_extruder_speed:
# variable_pause_x               : x position when MMU3 need intervention and the printer is paused
# variable_pause_y               : y position when MMU3 need intervention and the printer is paused
# variable_pause_z               : z lift when MMU3 need intervention and the printer is paused
# variable_min_temp_extruder     : minimal required heater temperature to load/unload filament from the extruder gear to the nozzle
# variable_extruder_eject_temp   : heater temperature used to eject filament during home if the filament is already loaded
# variable_enable_5in1           : pass from MMU3 standard (0) to MMU3-5in1 mode with splitter
#
################################

# enable MMU3 extension
[mmu3 MMU3]
timeout_pause: 36000
disable_heater: 600
# bowden load
bowden_load_length1: 450  # 770
bowden_load_length2: 20  # 790
bowden_load_speed1: 120
bowden_load_speed2: 60
bowden_load_accel1: 80
bowden_load_accel2: 80
# bowden unload
bowden_unload_length: 830
bowden_unload_speed: 120
bowden_unload_accel: 120
# pinda load/unload
pinda_load_length: 120
pinda_unload_length: 35
pinda_load_speed: 20
pinda_unload_speed: 20
pinda_load_accel: 800
pinda_unload_accel: 800
# selector
selector = [73.5,59.375,45.25,31.125,17]
# idler
idler = [5,20,35,50,65]
idler_home_position: 85
idler_load_to_extruder_speed: 30
idler_unload_speed: 30
# pause values
pause_before_disabling_steppers: 50
pause_after_disabling_steppers: 200
pause_x: 0
pause_y: 200
pause_z: 10
# temperature
min_temp_extruder: 180
extruder_eject_temp: 200
#
enable_5in1: 0
pinda_load_retry: 100
load_retry: 5
unload_retry: 5
filament_sensor_name: filament_switch_sensor my_filament_sensor


[gcode_macro VAR_MMU3]
# timeouts
variable_timeout_pause: 36000
variable_disable_heater: 600
# bowden load
variable_bowden_load_length1: 450  # 770
variable_bowden_load_length2: 20  # 790
variable_bowden_load_speed1: 120
variable_bowden_load_speed2: 60
variable_bowden_load_accel1: 80
variable_bowden_load_accel2: 80
# bowden unload
variable_bowden_unload_length: 830
variable_bowden_unload_speed: 120
variable_bowden_unload_accel: 120
# pinda load/unload
variable_pinda_load_length: 120
variable_pinda_unload_length: 35
variable_pinda_load_speed: 20
variable_pinda_unload_speed: 20
variable_pinda_load_accel: 800
variable_pinda_unload_accel: 800
# selector
variable_selector = [73.5,59.375,45.25,31.125,17]
# idler
variable_idler = [5,20,35,50,65]
variable_idler_home_position: 85
variable_idler_load_to_extruder_speed: 30
variable_idler_unload_speed: 30
# pause values
variable_pause_before_disabling_steppers: 50
variable_pause_after_disabling_steppers: 200
variable_pause_x: 0
variable_pause_y: 200
variable_pause_z: 10
# temperature
variable_min_temp_extruder: 180
variable_extruder_eject_temp: 200
#
variable_enable_5in1: 0
variable_pinda_load_retry: 100
variable_load_retry: 5
variable_unload_retry: 5
gcode:

# MMU3 SPLITTER
# variable_bowden_load_length1: 0
# variable_bowden_load_length2: 102
# variable_bowden_unload_length: 120
# MMU3 STANDARD
# variable_bowden_load_length1: 770
# variable_bowden_load_length2: 790
# variable_bowden_unload_length: 830

###############################
###############################
# END OF PARAMETER TO ADAPT TO YOUR SETUP
###############################
###############################


###############################
#
# MMU3 endstop status : IR extruder, PINDA, selector switch
# 0 : open, 1 : TRIGGERED
#
###############################

[gcode_macro MMU_STATISTICS]
variable_number_of_material_changes: 0
variable_number_of_successful_material_changes: 0
variable_number_of_fails: 0
gcode:

# # Display the last queried status
# [gcode_macro ENDSTOPS_STATUS]
# gcode:
#     M118 Endstop status :
#     M118 Extruder : {printer["filament_switch_sensor my_filament_sensor"].filament_detected}
#     M118 PINDA    : {printer.query_endstops.last_query["manual_stepper pulley_stepper"]}
#     # M118 PINDA    : {printer["filament_switch_sensor pinda_sensor"].filament_detected}
#     M118 Selector : {printer.query_endstops.last_query["manual_stepper selector_stepper"]}

# # Query and display the status
# [gcode_macro infos]
# gcode:
#     QUERY_ENDSTOPS
#     ENDSTOPS_STATUS

###############################
#
# PAUSE MACROS
# PAUSE_MMU is called when an human intervention is needed
# use UNLOCK_MMU to park the idler and start the manual intervention
# and use RESUME when the invention is ended to resume the current print
#
###############################

[pause_resume]
#recover_velocity: 50.

# park the idler, stop the delayed stop of the heater
[gcode_macro UNLOCK_MMU]
gcode:
   M118 Resume print
   SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=is_paused VALUE=0
#    UPDATE_DELAYED_GCODE ID=disable_heater DURATION=0
   HOME_IDLER
#    M109 S{[printer["gcode_macro PAUSE_MMU"].extruder_temp, printer["gcode_macro VAR_MMU3"].min_temp_extruder]|max}

[delayed_gcode disable_heater]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int != 0 %}
        M118 Disable extruder heater
        M104 S0
    {% endif %}

# Pause the MMU, park the extruder at the parking position
# Save the current state and start the delayed stop of the heated
# modify the timeout of the printer accordingly to timeout_pause
[gcode_macro PAUSE_MMU]
variable_is_paused: 0
variable_extruder_temp: 0
gcode:
    SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=extruder_temp VALUE={printer.extruder.temperature}
    SET_GCODE_VARIABLE MACRO=PAUSE_MMU VARIABLE=is_paused VALUE=1
    SAVE_GCODE_STATE NAME=PAUSE_MMU_state
    SET_IDLE_TIMEOUT TIMEOUT={printer["gcode_macro VAR_MMU3"].timeout_pause}
    # UPDATE_DELAYED_GCODE ID=disable_heater DURATION={printer["gcode_macro VAR_MMU3"].disable_heater}
    M118 START PAUSE
    M300
    M300
    M300
    PAUSE
    # {% if printer.gcode_move.gcode_position.x != printer["gcode_macro VAR_MMU3"].pause_x %}
    #     # Not in parked position, move to the parked position
    #     G91
    #     G1 Z{printer["gcode_macro VAR_MMU3"].pause_z}
    # {% endif %}
    G90
    G1 X{printer["gcode_macro VAR_MMU3"].pause_x} Y{printer["gcode_macro VAR_MMU3"].pause_y} F3000
    M300
    M300
    M300
    M118 END PAUSE
    RESTORE_GCODE_STATE NAME=PAUSE_MMU_state

############################################
#
# T0, T1, ..., T4 : Change extruder MACRO
# if th new extruder is different from the current extruder :
#     eject the filament if needed
#     load the new one
#
############################################

[gcode_macro T0]
gcode:
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 0 %}
        M117 Change Tool T0
        UT
        LT VALUE=0
    {% endif %}

[gcode_macro T1]
gcode:
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 1 %}
        M117 Change Tool T1
        UT
        LT VALUE=1
    {% endif %}

[gcode_macro T2]
gcode:
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 2 %}
        M117 Change Tool T2
        UT
        LT VALUE=2
    {% endif %}

[gcode_macro T3]
gcode:
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 3 %}
        M117 Change Tool T3
        UT
        LT VALUE=3
    {% endif %}

[gcode_macro T4]
gcode:
    {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != 4 %}
        M117 Change Tool T4
        UT
        LT VALUE=4
    {% endif %}

############################################
#
# Unloading/Loading Macros
#
############################################

# Load filament from MMU3 to nozzle
[gcode_macro LT]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        M118 LT {params.VALUE|int} ...
        SELECT_TOOL VALUE={params.VALUE|int}
        LOAD_FILAMENT_TO_EXTRUDER
        LOAD_FILAMENT_IN_EXTRUDER
    {% endif %}

# Unload filament from nozzle to MMU3
[gcode_macro UT]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != -1 %}
            M118 UT {printer["gcode_macro SELECT_TOOL"].color_selected|int} ...
            UNLOAD_FILAMENT_IN_EXTRUDER
            SELECT_TOOL VALUE={printer["gcode_macro SELECT_TOOL"].color_selected|int}
            UNLOAD_FILAMENT_FROM_EXTRUDER
        {% endif %}
    {% endif %}

############################################
#
# Select/Unselect a tool
# move the idler and the selector (if needed) to the requested tool (0-4)
#
############################################

# Select a tool. move the idler and then move the selector (if needed)
[gcode_macro SELECT_TOOL]
variable_tool_selected: -1
variable_color_selected: -1
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro HOME_MMU"].home != -1 %}
            M118 Select Tool {params.VALUE} ...
            MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU3"].idler[params.VALUE|int]}
            {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
                # MANUAL_STEPPER STEPPER=selector_stepper ENABLE=1
                MANUAL_STEPPER STEPPER=selector_stepper MOVE={printer["gcode_macro VAR_MMU3"].selector[params.VALUE|int]}
                G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
                MANUAL_STEPPER STEPPER=selector_stepper ENABLE=0
                G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
            {% endif %}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=tool_selected VALUE={params.VALUE}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE={params.VALUE}
            M118 Tool {params.VALUE} Enabled
        {% else %}
            M118 Could not select tool, MMU is not homed
        {% endif %}
    {% endif %}

# Unselect a tool, only park the idler
[gcode_macro UNSELECT_TOOL]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro HOME_MMU"].home != -1 %}
            MANUAL_STEPPER STEPPER=idler_stepper MOVE={printer["gcode_macro VAR_MMU3"].idler_home_position}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=tool_selected VALUE=-1
            G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
            MANUAL_STEPPER STEPPER=idler_stepper ENABLE=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
        {% else %}
            M118 Could not unselect tool, MMU is not homed
        {% endif %}
    {% endif %}


############################################
#
# Loading/Unloading part FROM/TO EXTRUDER TO/FROM NOZZLE
# During loading, if the IR sensor does not detect the filament, it tries 3 times to reinsert it
#
############################################

# Try to reinsert the filament into the extruder
# Called when the IR sensor does not detect the filament
# the MMU3 push the filament of 10mm
# and the extruder gear try to insert it into the nozzle
[gcode_macro RETRY_LOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor my_filament_sensor"].filament_detected != True %}
        M118 Retry loading ....
        {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
            {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU3"].min_temp_extruder %}
                M118 Loading Filament...
                G91
                SELECT_TOOL VALUE={printer["gcode_macro SELECT_TOOL"].color_selected|int}
                MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
                MANUAL_STEPPER STEPPER=pulley_stepper MOVE=10 SPEED={printer["gcode_macro VAR_MMU3"].idler_load_to_extruder_speed}
                MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
                G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
                MANUAL_STEPPER STEPPER=pulley_stepper ENABLE=0
                G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
                G1 E5 F600
                UNSELECT_TOOL
                G1 E2 F1800
                G1 E3 F1393
                G1 E2 F614
                G92 E0
                G90
            {% endif %}
        {% endif %}
    {% endif %}

# Load the filament into the extruder
# the MMU3 push the filament of 20mm
# and the extruder gear try to insert it into the nozzle
# if the filament is not detected by the IR, call RETRY_LOAD_FILAMENT_IN_EXTRUDER 5 times
#
# Call PAUSE_MMU if the filament is not detected by the IR sensor
[gcode_macro LOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU3"].min_temp_extruder %}
            M118 Loading Filament...
            G91
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            MANUAL_STEPPER STEPPER=pulley_stepper MOVE=20 SPEED={printer["gcode_macro VAR_MMU3"].idler_load_to_extruder_speed}
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
            MANUAL_STEPPER STEPPER=pulley_stepper ENABLE=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
            G1 E10 F600
            UNSELECT_TOOL
            G1 E3 F1800
            G1 E4 F1393
            G1 E3 F614
            G92 E0
            G90
            {% for i in range( printer["gcode_macro VAR_MMU3"].load_retry|int ) %}
                RETRY_LOAD_FILAMENT_IN_EXTRUDER
            {% endfor %}
            IS_FILAMENT_IN_EXTRUDER
            M118 Load Complete
        {% else %}
            M118 Extruder too cold
            PAUSE_MMU
        {% endif %}
    {% endif %}

# Retry unload, try correct misalignment of bondtech gear
[gcode_macro RETRY_UNLOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor my_filament_sensor"].filament_detected == True %}
        M118 Retry unloading ....
        {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
            {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU3"].min_temp_extruder %}
                M118 Unloading Filament...
                G91
                G92 E0
                G1 E10 F500
                G1 E-20 F500
                G1 E-30 F3000
                G92 E0
                G90
            {% endif %}
        {% endif %}
    {% endif %}

# Unload the filament from the nozzle (without RAMMING !!!)
# Retract the filament from the nozzle to the out of the extruder gear
#
# Call PAUSE_MMU if the IR sensor detects the filament after the ejection
[gcode_macro UNLOAD_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU3"].min_temp_extruder %}
            {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int == -1 %}
                M118 Unloading Filament...
                G91
                G92 E0
                G1 E-20 F500
                G1 E-30 F3000
                G90
                G92 E0
                G4 P1000
                {% for i in range( printer["gcode_macro VAR_MMU3"].unload_retry|int ) %}
                    RETRY_UNLOAD_FILAMENT_IN_EXTRUDER
                {% endfor %}
                IS_FILAMENT_STUCK_IN_EXTRUDER
                M118 Filament removed
            {% else %}
                M118 Tool selected, UNSELECT it
                PAUSE_MMU
            {% endif %}
        {% else %}
            M118 Extruder too cold
            PAUSE_MMU
        {% endif %}
    {% endif %}

# Ramming process for standard PLA,
# code extracted from OrcaSlicer gcode
[gcode_macro RAMMING_SLICER]
gcode:
    G91
    G92 E0
    ;TYPE:Prime tower
    ;WIDTH:0.5
    ;--------------------
    ; CP TOOLCHANGE START
    M220 S100
    ; CP TOOLCHANGE UNLOAD
    ;WIDTH:0.65
    SET_PRESSURE_ADVANCE ADVANCE=0
    G1 E0.2213 F1052
    G1 E0.2481 F1180
    G1 E0.3051 F1451
    G1 E0.3722 F1769
    G1 E0.4191 F1993
    G1 E0.4728 F2248
    G1 E0.5800 F2758
    G1 E0.3344 F3379
    G1 E0.3764 F3379
    G1 E0.7846 F3730
    G1 E0.8080 F3842
    G1 E0.8751 F4161
    G1 E0.1090 F4750
    G1 E0.8902 F4750
    G1 E1.0863 F5165
    G1 E0.9765 F5245
    G1 E0.1266 F5245
    ; Ramming start
    ; Retract(unload)
    G1 E-15.0000 F12000
    G1 E-8.0500 F5400
    G1 E-2.3000 F2700
    G1 E-1.1500 F1620
    ; Cooling
    G1 E5.0000 F2016
    G1 E-5.0000 F1920
    G1 E5.0000 F1824
    G1 E-5.0000 F1728
    G1 E5.0000 F1632
    G1 E-5.0000 F1536
    G1 E5.0000 F1440
    G1 E-5.0000 F1344
    ; Cooling park
    G1 E1.5000 F2000
    ; Ramming end
    G1 E-1 F5100
    G1 E-50.0000 F2000
    G90
    G92 E0

# Unload from extruder with ramming
[gcode_macro UNLOAD_FILAMENT_IN_EXTRUDER_WITH_RAMMING]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer.extruder.temperature > printer["gcode_macro VAR_MMU3"].min_temp_extruder %}
            {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int == -1 %}
                M118 Ramming and Unloading Filament...
                RAMMING_SLICER
                UNLOAD_FILAMENT_IN_EXTRUDER
                M118 Filament rammed and removed
            {% else %}
                M118 Tool selected, UNSELECT it
                PAUSE_MMU
            {% endif %}
        {% else %}
            M118 Extruder too cold
            PAUSE_MMU
        {% endif %}
    {% endif %}

############################################
#
# Loading/Unloading MACROS from MMU3 to the enter of the extruder gear
#
############################################

# Load filament until the PINDA detect it and push it 10mm more to be sure is well detected
#
# PAUSE_MMU is called if the PINDA does not detect the filament
[gcode_macro LOAD_FILAMENT_TO_PINDA]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Loading filament to PINDA ...
            LOAD_FILAMENT_TO_PINDA_IN_LOOP

            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            MANUAL_STEPPER STEPPER=pulley_stepper MOVE=10

            G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
            MANUAL_STEPPER STEPPER=pulley_stepper ENABLE=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
            IS_FILAMENT_IN_PINDA
            M118 Loading done to PINDA
        {% else %}
            M118 Cannot load to PINDA, tool not selected !!
        {% endif %}
    {% endif %}

# Load from the PINDA to the extruder gear
[gcode_macro LOAD_FILAMENT_FROM_PINDA_TO_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Loading filament from PINDA to extruder ...
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            MANUAL_STEPPER STEPPER=pulley_stepper MOVE={printer["gcode_macro VAR_MMU3"].bowden_load_length1} SPEED={printer["gcode_macro VAR_MMU3"].bowden_load_speed1} ACCEL={printer["gcode_macro VAR_MMU3"].bowden_load_accel1}
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            MANUAL_STEPPER STEPPER=pulley_stepper MOVE={printer["gcode_macro VAR_MMU3"].bowden_load_length2} SPEED={printer["gcode_macro VAR_MMU3"].bowden_load_speed2} ACCEL={printer["gcode_macro VAR_MMU3"].bowden_load_accel2}
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
            MANUAL_STEPPER STEPPER=pulley_stepper ENABLE=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
            M118 Loading done from PINDA to extruder
        {% else %}
            M118 Cannot load to extruder, tool not selected !!
        {% endif %}
    {% endif %}

# Load from MMU3 to extruder gear by calling LOAD_FILAMENT_TO_PINDA and next LOAD_FILAMENT_FROM_PINDA_TO_EXTRUDER
#
# PAUSE_MMU is called if the PINDA does not detect the filament
[gcode_macro LOAD_FILAMENT_TO_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Loading filament from MMU to extruder ...
            {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
                LOAD_FILAMENT_TO_PINDA
            {% endif %}
            LOAD_FILAMENT_FROM_PINDA_TO_EXTRUDER
            M118 Loading done from MMU to extruder
        {% else %}
            M118 Cannot load to extruder, tool not selected !!
        {% endif %}
    {% endif %}

# Unload filament until the PINDA detect it and push it -10mm more to be sure is well not detected
#
# PAUSE_MMU is called if the PINDA does detect the filament
[gcode_macro UNLOAD_FILAMENT_FROM_PINDA]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Unloading filament from PINDA ...
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            MANUAL_STEPPER STEPPER=pulley_stepper MOVE=-{printer["gcode_macro VAR_MMU3"].pinda_unload_length} SPEED={printer["gcode_macro VAR_MMU3"].pinda_unload_speed} ACCEL={printer["gcode_macro VAR_MMU3"].pinda_unload_accel}
            # MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            # MANUAL_STEPPER STEPPER=pulley_stepper MOVE=-10 SPEED={printer["gcode_macro VAR_MMU3"].pinda_unload_speed} ACCEL=0
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
            MANUAL_STEPPER STEPPER=pulley_stepper ENABLE=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
            IS_FILAMENT_STUCK_IN_PINDA
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE=-1
            M118 Unloading done from PINDA
        {% else %}
            M118 Cannot unload from PINDA, tool not selected !!
        {% endif %}
    {% endif %}

# Unload from extruder gear to the PINDA
[gcode_macro UNLOAD_FILAMENT_FROM_EXTRUDER_TO_PINDA]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Unloading filament from extruder to PINDA ...
            MANUAL_STEPPER STEPPER=pulley_stepper SET_POSITION=0
            {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
                MANUAL_STEPPER STEPPER=pulley_stepper MOVE=-{printer["gcode_macro VAR_MMU3"].bowden_unload_length} SPEED={printer["gcode_macro VAR_MMU3"].bowden_unload_speed} ACCEL={printer["gcode_macro VAR_MMU3"].bowden_unload_accel} STOP_ON_ENDSTOP=-2
                IS_FILAMENT_STUCK_IN_PINDA
            {% else %}
                MANUAL_STEPPER STEPPER=pulley_stepper MOVE=-{printer["gcode_macro VAR_MMU3"].bowden_unload_length} SPEED={printer["gcode_macro VAR_MMU3"].bowden_unload_speed} ACCEL={printer["gcode_macro VAR_MMU3"].bowden_unload_accel}
            {% endif %}
            G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
            MANUAL_STEPPER STEPPER=pulley_stepper ENABLE=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
            M118 Unloading done from PINDA to extruder
        {% else %}
            M118 Cannot unload from extruder to PINDA, tool not selected !!
        {% endif %}
    {% endif %}

# Unload from the extruder gear to the MMU3 by calling UNLOAD_FILAMENT_FROM_EXTRUDER_TO_PINDA and next UNLOAD_FILAMENT_FROM_PINDA
[gcode_macro UNLOAD_FILAMENT_FROM_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].tool_selected|int != -1 %}
            M118 Unloading filament from extruder to MMU ...
            UNLOAD_FILAMENT_FROM_EXTRUDER_TO_PINDA
            {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
            UNLOAD_FILAMENT_FROM_PINDA
            {% endif %}
            M118 Unloading done from extruder to MMU
        {% else %}
            M118 Cannot unload from extruder to MMU, tool not selected !!
        {% endif %}
    {% endif %}

############################################
#
# Endstop check MACROS
# Verify the state of the PINDA or the IR sensor
#
############################################

# Call PAUSE_MMU if the filament is not detected by the IR sensor
[gcode_macro IS_FILAMENT_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor my_filament_sensor"].filament_detected == True %}
        M118 Filament in extruder
    {% else %}
        M118 Filament not in extruder
        PAUSE_MMU
    {% endif %}

# Call PAUSE_MMU if the filament is not detected by the PINDA
[gcode_macro IS_FILAMENT_IN_PINDA]
gcode:
    QUERY_ENDSTOPS
    IS_IN_PINDA

[gcode_macro IS_IN_PINDA]
gcode:
    {% if printer.query_endstops.last_query["manual_stepper pulley_stepper"] == 1 %}
    # {% if printer["filament_switch_sensor pinda_sensor"].filament_detected == True %}
        M118 Filament in PINDA
    {% else %}
        M118 Filament not in PINDA
        PAUSE_MMU
    {% endif %}


# Call PAUSE_MMU if the filament is detected by the IR sensor
[gcode_macro IS_FILAMENT_STUCK_IN_EXTRUDER]
gcode:
    {% if printer["filament_switch_sensor my_filament_sensor"].filament_detected == True %}
        M118 Filament stuck in extruder
        PAUSE_MMU
    {% else %}
        M118 Filament not in extruder
    {% endif %}

# Call PAUSE_MMU if the filament is detected by the PINDA
[gcode_macro IS_FILAMENT_STUCK_IN_PINDA]
gcode:
     QUERY_ENDSTOPS
     IS_STUCK_IN_PINDA

[gcode_macro IS_STUCK_IN_PINDA]
gcode:
    {% if printer.query_endstops.last_query["manual_stepper pulley_stepper"] == 1 %}
    # {% if printer["filament_switch_sensor pinda_sensor"].filament_detected == True %}
        M118 Filament stuck in PINDA
        PAUSE_MMU
    {% else %}
        M118 Filament not in PINDA
    {% endif %}

############################################
#
# M702 macro called by the end-gcode to eject the filament at the end of the print
#
############################################

# Eject the filament with ramming from the extruder nozzle to the MMU3
[gcode_macro EJECT_RAMMING]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["gcode_macro SELECT_TOOL"].color_selected|int != -1 %}
            M118 UT {printer["gcode_macro SELECT_TOOL"].color_selected|int} ...
            UNLOAD_FILAMENT_IN_EXTRUDER_WITH_RAMMING
            SELECT_TOOL VALUE={printer["gcode_macro SELECT_TOOL"].color_selected|int}
            UNLOAD_FILAMENT_FROM_EXTRUDER
        {% endif %}
    {% endif %}

# M702 first part
# unload filament if inserted into the IR sensor
[gcode_macro M702]
gcode:
    UT
    QUERY_ENDSTOPS
    END_M702

# M702 second part
# Unselect the current tool
[gcode_macro END_M702]
gcode:
    {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
        {% if printer.query_endstops.last_query["manual_stepper pulley_stepper"] != 1 %}
        # {% if printer["filament_switch_sensor pinda_sensor"].filament_detected != True %}
            UNSELECT_TOOL
            M118 M702 ok ...
        {% else %}
            M118 M702 Error !!!
        {% endif %}
    {% else %}
        UNSELECT_TOOL
        SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE=-1
        M118 M702 ok ...
    {% endif %}

############################################
#
# MACROS called during homing to try to eject the filament if loaded
#
############################################

# Preheat the heater if needed and unload the filament with ramming
# eject from nozzle to extruder gear out
[gcode_macro EJECT_FROM_EXTRUDER]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        {% if printer["filament_switch_sensor my_filament_sensor"].filament_detected == True %}
            M118 Filament in extruder, trying to eject it ..
            M118 Preheat Nozzle
            M109 S{[printer.extruder.temperature, printer["gcode_macro VAR_MMU3"].extruder_eject_temp]|max}
            UNLOAD_FILAMENT_IN_EXTRUDER_WITH_RAMMING
            M104 S0
        {% else %}
            M118 Filament not in extruder
        {% endif %}
    {% endif %}

# Eject from extruder gear to MMU3
[gcode_macro EJECT_BEFORE_HOME]
gcode:
    M118 Eject Filament if loaded ...
    {% if printer["filament_switch_sensor my_filament_sensor"].filament_detected == True %}
        EJECT_FROM_EXTRUDER
        IS_FILAMENT_STUCK_IN_EXTRUDER
    {% endif %}
    {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
        {% if printer.query_endstops.last_query["manual_stepper pulley_stepper"] == 1 %}
        # {% if printer["filament_switch_sensor pinda_sensor"].filament_detected == True %}
            UNLOAD_FILAMENT_FROM_EXTRUDER
            IS_FILAMENT_STUCK_IN_PINDA
            M118 Filament ejected !
        {% else %}
            M118 Filament already ejected !
        {% endif %}
    {% else %}
        M118 Filament already ejected !
    {% endif %}

############################################
#
# Homing MACROS
# HOME_MMU must be called before using the MMU3
#
############################################

# Home the MMU
# eject filament if loaded with EJECT_BEFORE_HOME
# next home the mmu with HOME_MMU_ONLY
[gcode_macro HOME_MMU]
variable_home: -1
gcode:
    SET_FILAMENT_SENSOR SENSOR=my_filament_sensor ENABLE=0
    SET_GCODE_VARIABLE MACRO=HOME_MMU VARIABLE=home VALUE=1
    M118 Homing MMU ...
    QUERY_ENDSTOPS
    EJECT_BEFORE_HOME
    HOME_MMU_ONLY

# Home the MMU :
# 1) home the idler
# 2) home the selector (if needed)
# 3) try to load filament 0 to PINDA and then unload it. Used to verify the MMU3 gear
#
# if all is ok, the MMU3 is ready to be used
[gcode_macro HOME_MMU_ONLY]
gcode:
    {% if printer["gcode_macro PAUSE_MMU"].is_paused|int == 0 %}
        HOME_IDLER
        {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
            M118 Homing selector
            # MANUAL_STEPPER STEPPER=selector_stepper ENABLE=1
            MANUAL_STEPPER STEPPER=selector_stepper SET_POSITION=0
            MANUAL_STEPPER STEPPER=selector_stepper MOVE=-76 STOP_ON_ENDSTOP=1
            MANUAL_STEPPER STEPPER=selector_stepper SET_POSITION=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
            MANUAL_STEPPER STEPPER=selector_stepper ENABLE=0
            G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
        {% endif %}
        MANUAL_STEPPER STEPPER=idler_stepper MOVE=0
        SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=tool_selected VALUE=-1
        SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE=-1
        G4 P{printer["gcode_macro VAR_MMU3"].pause_before_disabling_steppers|int}
        MANUAL_STEPPER STEPPER=idler_stepper ENABLE=0
        G4 P{printer["gcode_macro VAR_MMU3"].pause_after_disabling_steppers|int}
        M118 Test load filament 0
        SELECT_TOOL VALUE=0
        {% if printer["gcode_macro VAR_MMU3"].enable_5in1 == 0 %}
            # LOAD_FILAMENT_TO_PINDA
            # G4 P1000
            # UNLOAD_FILAMENT_FROM_PINDA
        {% else %}
            SET_GCODE_VARIABLE MACRO=SELECT_TOOL VARIABLE=color_selected VALUE=-1
        {% endif %}
        UNSELECT_TOOL
        SET_GCODE_VARIABLE MACRO=HOME_MMU VARIABLE=home VALUE=1
        M118 Homing MMU ended ...
    {% else %}
        M118 Homing MMU failed, MMU is paused, unlock it ...
    {% endif %}

###############################################
